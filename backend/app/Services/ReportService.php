<?php

namespace App\Services;

use App\Models\Report;
use App\Models\User;
use Config;
use Illuminate\Support\Facades\Storage;

class ReportService
{

    private $userService;

    public function __construct(UserService $userService)
    {
        $this->userService = $userService;
    }

    public function list()
    {
        $getCurrentUser = $this->userService->getCurrentUser();

        // if company user - then list all report generated by individual user
        if (Config::get('settings.permission.company_user_slug') == $getCurrentUser->roles[0]->slug) {
            return Report::with('user', 'company', 'tool')
                ->where('user_id', $getCurrentUser->id);
        }

        // if company admin - then list all report generated by all users of that company
        if (Config::get('settings.permission.company_admin_slug') == $getCurrentUser->roles[0]->slug) {
            return Report::with('user', 'company', 'tool')
                ->where('company_id', $getCurrentUser->company->id);
        }

        // if super admin list all reports
        return Report::with('user', 'company', 'tool');
    }

    public function search($data)
    {
        $getCurrentUser = $this->userService->getCurrentUser();

        $reports = Report::with('user', 'company', 'tool');

        // if company user - then list all report generated by individual user
        if (Config::get('settings.permission.company_user_slug') == $getCurrentUser->roles[0]->slug) {
            $reports = $reports->where('user_id', $getCurrentUser->id);
        }

        // if company admin - then list all report generated by all users of that company
        if (Config::get('settings.permission.company_admin_slug') == $getCurrentUser->roles[0]->slug) {
            $reports = $reports->where('company_id', $getCurrentUser->company->id);
        }

        // Filter by Model, Company, User

        if (!empty($data['tool_id'])) {
            $reports = $reports->where('tool_id', $data['tool_id']);
        }

        if (!empty($data['company_id'])) {
            $reports = $reports->where('company_id', $data['company_id']);
        }

        if (!empty($data['user_id'])) {
            $reports = $reports->where('user_id', $data['user_id']);
        }

        if (!empty($data['start_date']) && !empty($data['end_date'])) {
            $start_date = date('Y-m-d', strtotime(str_replace('/', '-', $data['start_date'])));
            $end_date = date('Y-m-d', strtotime(str_replace('/', '-', $data['end_date'])));
            $reports = $reports->whereDate('created_at', '>=', $start_date);
            $reports = $reports->whereDate('created_at', '<=', $end_date);
        }

        // if super admin list all reports
        return $reports;
    }

    public function save($data)
    {
        return Report::create($data);
    }

    public function delete($id)
    {
        try {
            $report_data = Report::find($id)->toArray();
            $file_name = $report_data['file_name'];
            $file_type = $report_data['file_type'];
            $path = Storage::path('') . strtolower($file_type) . "/models/" . $file_name;
            //unlink($path);
            Storage::delete($path);
        } catch (\Exception $e) {
            return response()->json(
                [
                    'storage_path' => Storage::path(''),
                    'message' => $e->getMessage()
                ],
                404
            );
        }
        return Report::destroy($id);
    }

    /**
     * @return mixed
     */
    public function countTotalReports()
    {
        $currentUser = $this->userService->getCurrentUser();

        if ($currentUser->roles[0]->slug !== Config::get('settings.permission.super_admin_slug')) {
            return Report::where('company_id', $currentUser->company->id)->count();
        }

        return Report::count();
    }
}
